language: python

env:
    matrix:
        - PYTHON=2.7
          PACKAGES="numpy=1.7.1 matplotlib=1.3.1 scipy=0.12.0 libpng=1.5.*"
        - PYTHON=3.4
          PACKAGES="numpy=1.8.2 matplotlib=1.3.1 scipy=0.14.0 libpng=1.5.*"
        - PYTHON=3.4
          PACKAGES="numpy=1.8.2 matplotlib=1.3.1"

sudo: false

git:
  depth: 10000

install:
  # Install miniconda
  # -----------------
  - if [[ "$TRAVIS_PYTHON_VERSION" == 2* ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls yes
  - conda update conda
  - conda create -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

  # Customise the testing environment
  # ---------------------------------
  - conda config --add channels scitools
  - PACKAGES="$PACKAGES cython pillow mock nose pep8=1.5.7 proj4=4.9 pyshp shapely six requests pyepsg"
  - if [[ "$TRAVIS_PYTHON_VERSION" == 2* ]]; then
      PACKAGES="$PACKAGES owslib";
    fi
  - conda install $PACKAGES

  # Conda debug
  # -----------
  - conda list

  - MPL_CONFIG_DIR=~/.config/matplotlib
  - mkdir -p $MPL_CONFIG_DIR
  - echo "backend" ":" "agg" > $MPL_CONFIG_DIR/matplotlibrc

  # Install cartopy
  # ---------------
  - python setup.py --quiet install

script:
  - mkdir ../test_folder
  - cd ../test_folder
  - CARTOPY_GIT_DIR=$TRAVIS_BUILD_DIR nosetests cartopy --with-doctest -sv
  # Check that the downloader tool at least knows where to get the data from (but don't actually download it)
  - python $TRAVIS_BUILD_DIR/tools/feature_download.py gshhs physical --dry-run

after_failure:
  - source activate test-environment
  - python -c "from __future__ import print_function; import cartopy.tests.mpl; print(cartopy.tests.mpl.failed_images_html())"
